# encoding: utf-8
# copyright: 2018, eNFence GmbH

title 'java_advisory_20180919'

control 'CVE-2018-1656' do
  impact 0.59
  title 'CVE-2018-1656'
  desc 'The IBM Java Runtime Environment''s Diagnostic Tooling
        Framework for Java (DTFJ) does not protect against path traversal
        attacks when extracting compressed dump files.
  '
  tag 'java', 'jre', 'java8', 'java7', 'java71'
  tag :score, '7.4'
  ref 'https://aix.software.ibm.com/aix/efixes/security/java_july2018_advisory.asc'

  only_if do
    os.aix?
  end

  describe command('/usr/bin/lslpp -Lqc Java7_64.jre') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-2]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java7_64.sdk') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.1\.0\.6[0-2]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java7.jre') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-2]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java7.sdk') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-2]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71_64.jre') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-2]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71_64.sdk') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-2]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71.jre') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-2]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71.sdk') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-2]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8_64.jre') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.5[01]/) }
    its('stdout') { should_not match(/:8\.0\.0\.520:/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8_64.sdk') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.5[01]/) }
    its('stdout') { should_not match(/:8\.0\.0\.520:/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8.jre') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.5[01]/) }
    its('stdout') { should_not match(/:8\.0\.0\.520:/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8.sdk') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.5[01]/) }
    its('stdout') { should_not match(/:8\.0\.0\.520:/) }
  end
end

