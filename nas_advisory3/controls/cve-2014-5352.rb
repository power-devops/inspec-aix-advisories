# encoding: utf-8
# copyright: 2015, The Authors

title 'nas_advisory3'

# you add controls here
control 'CVE-2014-5352' do                        # A unique ID for this control
  impact 0.9                                # The criticality, if this control fails.
  title 'AIX NAS denial of service vulnerability'             # A human-readable title
  desc 'Security context handles are not properly maintained, which allows 
	remote authenticated users to cause a denial of service(use-after-free 
	and double free, and daemon crash) or possibly execute arbitrary code 
	via crafted GSSAPI traffic.
  '
  tag 'kerberos', 'nas'
  tag :score, '9.0'
  ref 'https://aix.software.ibm.com/aix/efixes/security/nas_advisory3.asc'

  only_if do
    os.aix?
  end

  describe command('/usr/bin/lslpp -Lqc krb5.client.rte') do
    its('stdout') { should_not match(/:1\.[0-4]\./) }
    its('stdout') { should_not match(/:1\.5\.0\.[0-6]:/) } 
    its('stdout') { should_not match(/:1\.6\.0\.[0-1]:/) } 
  end

  describe command('/usr/bin/lslpp -Lqc krb5.server.rte') do
    its('stdout') { should_not match(/:1\.[0-4]\./) }
    its('stdout') { should_not match(/:1\.5\.0\.[0-6]:/) } 
    its('stdout') { should_not match(/:1\.6\.0\.[0-1]:/) } 
  end

  if command('/usr/bin/lslpp -Lqc krb5.client.rte').stdout.match(/:1\.5\.0\.7:/)
    describe command('/usr/sbin/emgr -l') do                  # The actual test
      its('stdout') { should match(/1507c_fix/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc krb5.client.rte').stdout.match(/:1\.6\.0\.2:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/1602c_fix/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc krb5.server.rte').stdout.match(/:1\.5\.0\.7:/)
    describe command('/usr/sbin/emgr -l') do                  # The actual test
      its('stdout') { should match(/1507s_fix/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc krb5.server.rte').stdout.match(/:1\.6\.0\.2:/)
    describe command('/usr/sbin/emgr -l') do                  # The actual test
      its('stdout') { should match(/1602s_fix/) }
    end
  end
end
