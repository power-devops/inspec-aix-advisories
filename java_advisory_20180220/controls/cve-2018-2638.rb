# encoding: utf-8
# copyright: 2018, eNFence GmbH

title 'java_advisory_20180220'

control 'CVE-2018-2638' do
  impact 0.83
  title 'An unspecified vulnerability related to the Java SE Deployment component could allow an unauthenticated attacker to take control of the system.'
  desc 'Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Deployment). 
        Supported versions that are affected are Java SE: 8u152 and 9.0.1. Difficult to exploit 
        vulnerability allows unauthenticated attacker with network access via multiple protocols 
        to compromise Java SE. Successful attacks require human interaction from a person other than 
        the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional 
        products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This 
        vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start 
        applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from 
        the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java 
        deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). 
  '
  tag 'java', 'jre', 'java 8'
  tag :score, '8.3'
  ref 'http://www-01.ibm.com/support/docview.wss?uid=swg1IJ04034'

  only_if do
    os.aix?
  end

  describe command('/usr/bin/lslpp -Lqc Java8_64.jre') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8_64.sdk') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8.jre') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8.sdk') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end
end

