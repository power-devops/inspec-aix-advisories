# encoding: utf-8
# copyright: 2018, eNFence GmbH

title 'java_advisory_20180220'

control 'CVE-2018-2602' do
  impact 0.45
  title 'An unspecified vulnerability related to the Java SE I18n component could allow an unauthenticated attacker to cause low confidentiality impact, low integrity impact, and low availability impact.'
  desc 'Vulnerability in the Java SE, Java SE Embedded component of 
        Oracle Java SE (subcomponent: I18n). Supported versions that 
        are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java 
        SE Embedded: 8u151. Difficult to exploit vulnerability allows 
        unauthenticated attacker with logon to the infrastructure where 
        Java SE, Java SE Embedded executes to compromise Java SE, Java 
        SE Embedded. Successful attacks require human interaction from 
        a person other than the attacker. Successful attacks of this 
        vulnerability can result in unauthorized update, insert or delete 
        access to some of Java SE, Java SE Embedded accessible data as well 
        as unauthorized read access to a subset of Java SE, Java SE Embedded 
        accessible data and unauthorized ability to cause a partial denial 
        of service (partial DOS) of Java SE, Java SE Embedded. Note: This 
        vulnerability applies to Java deployments, typically in clients running 
        sandboxed Java Web Start applications or sandboxed Java applets, that 
        load and run untrusted code (e.g., code that comes from the internet) 
        and rely on the Java sandbox for security. This vulnerability does not 
        apply to Java deployments, typically in servers, that load and run 
        only trusted code (e.g., code installed by an administrator). 
  '
  tag 'java', 'jre', 'java 8'
  tag :score, '4.5'
  ref 'http://www-01.ibm.com/support/docview.wss?uid=swg1IJ04045'

  only_if do
    os.aix?
  end

  describe command('/usr/bin/lslpp -Lqc Java7_64.jre') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java7_64.sdk') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java7.jre') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java7.sdk') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71_64.jre') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71_64.sdk') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71.jre') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71.sdk') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8_64.jre') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8_64.sdk') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8.jre') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8.sdk') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end
end

