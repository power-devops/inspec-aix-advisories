# encoding: utf-8
# copyright: 2018, eNFence GmbH

title 'java_advisory_20180220'

control 'CVE-2018-2637' do
  impact 0.74
  title 'An unspecified vulnerability related to the Java SE JMX component could allow an unauthenticated attacker to cause high confidentiality impact, high integrity impact, and no availability impact.'
  desc 'Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle 
        Java SE (subcomponent: JMX). Supported versions that are affected are Java SE: 
        6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Difficult 
        to exploit vulnerability allows unauthenticated attacker with network access via 
        multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful 
        attacks of this vulnerability can result in unauthorized creation, deletion or modification 
        access to critical data or all Java SE, Java SE Embedded, JRockit accessible data as well 
        as unauthorized access to critical data or complete access to all Java SE, Java SE Embedded, 
        JRockit accessible data. Note: This vulnerability can only be exploited by supplying data to 
        APIs in the specified Component without using Untrusted Java Web Start applications or 
        Untrusted Java applets, such as through a web service. 
  '
  tag 'java', 'jre', 'java 8'
  tag :score, '7.4'
  ref 'http://www-01.ibm.com/support/docview.wss?uid=swg1IJ04037'

  only_if do
    os.aix?
  end

  describe command('/usr/bin/lslpp -Lqc Java6_64.sdk') do
    its('stdout') { should_not match(/:6\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:6\.0\.0\.6[0-5]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java6.sdk') do
    its('stdout') { should_not match(/:6\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:6\.0\.0\.6[0-5]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java7_64.jre') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java7_64.sdk') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java7.jre') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java7.sdk') do
    its('stdout') { should_not match(/:7\.0\.0\.[0-5]/) }
    its('stdout') { should_not match(/:7\.0\.0\.6[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71_64.jre') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71_64.sdk') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71.jre') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java71.sdk') do
    its('stdout') { should_not match(/:7\.1\.0\.[0-3]/) }
    its('stdout') { should_not match(/:7\.1\.0\.4[0-1]/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8_64.jre') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8_64.sdk') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8.jre') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end

  describe command('/usr/bin/lslpp -Lqc Java8.sdk') do
    its('stdout') { should_not match(/:8\.0\.0\.[0-4]/) }
    its('stdout') { should_not match(/:8\.0\.0\.50/) }
  end
end

