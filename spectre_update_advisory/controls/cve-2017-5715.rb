# encoding: utf-8
# copyright: 2018, eNFence GmbH

title 'spectre_update_advisory'

control 'CVE-2017-5715' do
  impact 0.5
  title 'IBM has released updated AIX and VIOS fixes for CVE-2017-5715, known as Spectre'
  desc 'IBM has released updated AIX and VIOS fixes for CVE-2017-5715, known as 
    Spectre, that are only applicable to the following POWER9 systems:

    9040-MR9

    The prtconf command may be used to find the system model number.
    For example:  prtconf | grep "System Model"
  '

  tag 'aix', 'aix61', 'aix71', 'aix72'
  tag 'vios'
  tag :score, '5.0'
  ref 'http://aix.software.ibm.com/aix/efixes/security/spectre_update_advisory.asc'

  only_if do
    command('/usr/sbin/lsattr -El sys0 -a modelname | grep 9040-MR9').exit_status == 0
  end

  describe command('/usr/bin/lslpp -Lqc bos.mp64') do
    its('stdout') { should_not match(/:6\.1\.[0-8]\./) }
    its('stdout') { should_not match(/:6\.1\.9\.[0-9]:/) }
    its('stdout') { should_not match(/:6\.1\.9\.[0-9][0-9]:/) }
    its('stdout') { should_not match(/:6\.1\.9\.1[0-9][0-9]:/) }
    its('stdout') { should_not match(/:6\.1\.9\.20[02-9]:/) }
    its('stdout') { should_not match(/:6\.1\.9\.2[1-9][0-9]:/) }
    its('stdout') { should_not match(/:6\.1\.9\.30[1-9]:/) }
    its('stdout') { should_not match(/:6\.1\.9\.31[0-4]:/) }
    its('stdout') { should_not match(/:7\.1\.[0-3]\./) }
    its('stdout') { should_not match(/:7\.1\.4\.[0-9]:/) }
    its('stdout') { should_not match(/:7\.1\.4\.[0-2][0-9]:/) }
    its('stdout') { should_not match(/:7\.1\.4\.3[0-1]:/) }
    its('stdout') { should_not match(/:7\.1\.5\.[1-9]:/) }
    its('stdout') { should_not match(/:7\.1\.5\.1[0-4]:/) }
    its('stdout') { should_not match(/:7\.2\.1\.[0-2]:/) }
    its('stdout') { should_not match(/:7\.2\.2\.[1-9]:/) }
    its('stdout') { should_not match(/:7\.2\.2\.1[0-4]:/) }
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:6\.1\.9\.201:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07498m9a/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:6\.1\.9\.300:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07498mAa/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:6\.1\.9\.31[56]:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07498mBa/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:7\.1\.4\.32:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07499m4a/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:7\.1\.4\.33:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07499m5a/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:7\.1\.4\.34:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07499m6a/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:7\.1\.5\.0:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07500m1a/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:7\.1\.5\.1[56]:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07500m2a/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:7\.2\.1\.3:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07501m2a/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:7\.2\.1\.4:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07501m3a/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:7\.2\.1\.5:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07501m4a/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:7\.2\.2\.0:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07497m1a/) }
    end
  end

  if command('/usr/bin/lslpp -Lqc bos.mp64').stdout.match(/:7\.2\.2\.1[56]:/)
    describe command('/usr/sbin/emgr -l') do
      its('stdout') { should match(/IJ07497m2a/) }
    end
  end
end
